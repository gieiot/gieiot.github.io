_s['0']=["topic_0000000000000000.html","Gie.Iot.Acquisition.Gnss.Commons Namespace","Contains data models, interfaces and commons for gnss acquisition clients."];
_s['1']=["topic_0000000000000001.html","GnssStatus Enumeration","Gnss location status."];
_s['2']=["topic_0000000000000004.html","GnssConnectedEventArgs Class","Class that contains information when a IGnssClient is connected."];
_s['3']=["topic_0000000000000004_attached_props--.html","GnssConnectedEventArgs Attached Properties",""];
_s['4']=["topic_0000000000000004_events--.html","GnssConnectedEventArgs Events",""];
_s['5']=["topic_0000000000000004_methods--.html","GnssConnectedEventArgs Methods",""];
_s['6']=["topic_0000000000000004_props--.html","GnssConnectedEventArgs Properties",""];
_s['7']=["topic_0000000000000004_vars--.html","GnssConnectedEventArgs Fields",""];
_s['8']=["topic_0000000000000005.html","GnssConnectedEventArgs Constructor","Initializes a new instance of the GnssConnectedEventArgs class."];
_s['9']=["topic_0000000000000006.html","GnssDisconnectedEventArgs Class","Class that contains information when a IGnssClient is disconnected."];
_s['10']=["topic_0000000000000006_attached_props--.html","GnssDisconnectedEventArgs Attached Properties",""];
_s['11']=["topic_0000000000000006_events--.html","GnssDisconnectedEventArgs Events",""];
_s['12']=["topic_0000000000000006_methods--.html","GnssDisconnectedEventArgs Methods",""];
_s['13']=["topic_0000000000000006_props--.html","GnssDisconnectedEventArgs Properties",""];
_s['14']=["topic_0000000000000006_vars--.html","GnssDisconnectedEventArgs Fields",""];
_s['15']=["topic_0000000000000007.html","GnssDisconnectedEventArgs Constructor","Initializes a new instance of the GnssDisconnectedEventArgs class."];
_s['16']=["topic_0000000000000008.html","GnssErrorEventArgs Class","Class that contains information about IGnssClient error event."];
_s['17']=["topic_0000000000000008_attached_props--.html","GnssErrorEventArgs Attached Properties",""];
_s['18']=["topic_0000000000000008_events--.html","GnssErrorEventArgs Events",""];
_s['19']=["topic_0000000000000008_methods--.html","GnssErrorEventArgs Methods",""];
_s['20']=["topic_0000000000000008_props--.html","GnssErrorEventArgs Properties",""];
_s['21']=["topic_0000000000000008_vars--.html","GnssErrorEventArgs Fields",""];
_s['22']=["topic_0000000000000009.html","GnssErrorEventArgs.Message Property","Gets the error message."];
_s['23']=["topic_000000000000000A.html","GnssErrorEventArgs.MoreInfo Property","Gets more info about error."];
_s['24']=["topic_000000000000000B.html","GnssErrorEventArgs(String) Constructor","Initializes a new instance of the GnssErrorEventArgs class without more info."];
_s['25']=["topic_000000000000000B_overloads--.html","GnssErrorEventArgs Constructor","Initializes a new instance of the GnssErrorEventArgs class without more info."];
_s['26']=["topic_000000000000000C.html","GnssErrorEventArgs(String, String) Constructor","Initializes a new instance of the GnssErrorEventArgs class."];
_s['27']=["topic_000000000000000C_overloads--.html","GnssErrorEventArgs Constructor","Initializes a new instance of the GnssErrorEventArgs class."];
_s['28']=["topic_000000000000000D.html","GnssStatusEventArgs Class","Class that contains current status of IGnssClient."];
_s['29']=["topic_000000000000000D_attached_props--.html","GnssStatusEventArgs Attached Properties",""];
_s['30']=["topic_000000000000000D_events--.html","GnssStatusEventArgs Events",""];
_s['31']=["topic_000000000000000D_methods--.html","GnssStatusEventArgs Methods",""];
_s['32']=["topic_000000000000000D_props--.html","GnssStatusEventArgs Properties",""];
_s['33']=["topic_000000000000000D_vars--.html","GnssStatusEventArgs Fields",""];
_s['34']=["topic_000000000000000E.html","GnssStatusEventArgs.Status Property","Gets the GnssStatus."];
_s['35']=["topic_000000000000000F.html","GnssStatusEventArgs Constructor","Initializes a new instance of the GnssStatusEventArgs class."];
_s['36']=["topic_0000000000000010.html","GnssTpvReportEventArgs Class","Class that contain GnssTpvReport received event data."];
_s['37']=["topic_0000000000000010_attached_props--.html","GnssTpvReportEventArgs Attached Properties",""];
_s['38']=["topic_0000000000000010_events--.html","GnssTpvReportEventArgs Events",""];
_s['39']=["topic_0000000000000010_methods--.html","GnssTpvReportEventArgs Methods",""];
_s['40']=["topic_0000000000000010_props--.html","GnssTpvReportEventArgs Properties",""];
_s['41']=["topic_0000000000000010_vars--.html","GnssTpvReportEventArgs Fields",""];
_s['42']=["topic_0000000000000011.html","GnssTpvReportEventArgs.Report Property","Gets the GnssTpvReport received."];
_s['43']=["topic_0000000000000012.html","GnssTpvReportEventArgs Constructor","Initializes a new instance of the GnssTpvReportEventArgs class."];
_s['44']=["topic_0000000000000013.html","IGnssClient Interface","Interface for Gnss clients."];
_s['45']=["topic_0000000000000013_attached_props--.html","IGnssClient Attached Properties",""];
_s['46']=["topic_0000000000000013_events--.html","IGnssClient Events",""];
_s['47']=["topic_0000000000000013_methods--.html","IGnssClient Methods",""];
_s['48']=["topic_0000000000000013_props--.html","IGnssClient Properties",""];
_s['49']=["topic_0000000000000013_vars--.html","IGnssClient Fields",""];
_s['50']=["topic_0000000000000014.html","IGnssClient.TpvReportCurrent Property","Gets current GnssTpvReport."];
_s['51']=["topic_0000000000000015.html","IGnssClient.TpvReportLastFixed Property","Gets last fixed GnssTpvReport."];
_s['52']=["topic_0000000000000016.html","IGnssClient.IsConnected Property","True if client is connected."];
_s['53']=["topic_0000000000000017.html","IGnssClient.Status Property","Gets GnssStatus of GNSS."];
_s['54']=["topic_0000000000000018.html","IGnssClient.ReportsCountBeforeNoFix Property","Gets number of NoFix reports required by client to switch status."];
_s['55']=["topic_0000000000000019.html","Connected Event","Event triggered when cliet is connected."];
_s['56']=["topic_000000000000001A.html","Disconnected Event","Event triggered when client connection is closed."];
_s['57']=["topic_000000000000001B.html","Error Event","Event triggered when service detects an error."];
_s['58']=["topic_000000000000001C.html","StatusChanged Event","Event triggered when gps status changes."];
_s['59']=["topic_000000000000001D.html","TpvReportReceived Event","Event triggered when new Time-position-velocity report is received."];
_s['60']=["topic_000000000000001E.html","IGnssClient.StartAsync Method","Starts client."];
_s['61']=["topic_000000000000001F.html","IGnssClient.CloseAsync Method","Stops client service."];
_s['62']=["topic_0000000000000020.html","GnssTpvReport Class","Time-position-velocity report class."];
_s['63']=["topic_0000000000000020_attached_props--.html","GnssTpvReport Attached Properties",""];
_s['64']=["topic_0000000000000020_events--.html","GnssTpvReport Events",""];
_s['65']=["topic_0000000000000020_methods--.html","GnssTpvReport Methods",""];
_s['66']=["topic_0000000000000020_props--.html","GnssTpvReport Properties",""];
_s['67']=["topic_0000000000000020_vars--.html","GnssTpvReport Fields",""];
_s['68']=["topic_0000000000000021.html","GnssTpvReport.Status Property","Gets and sets GnssStatus."];
_s['69']=["topic_0000000000000022.html","GnssTpvReport.Time Property","Gets an sets DateTime."];
_s['70']=["topic_0000000000000023.html","GnssTpvReport.Latitude Property","Gets an sets Latitude."];
_s['71']=["topic_0000000000000024.html","GnssTpvReport.Longitude Property","Gets an sets Longitude."];
_s['72']=["topic_0000000000000025.html","GnssTpvReport.Altitude Property","Gets an sets Altitude."];
_s['73']=["topic_0000000000000026.html","GnssTpvReport.Speed Property","Gets an sets Speed."];
_s['74']=["topic_0000000000000027.html","GnssTpvReport Constructor","Initializes a new instance of the GnssTpvReport class."];
_s['75']=["topic_0000000000000028.html","Gie.Iot.Acquisition.Gnss.Gpsd Namespace","Client to get GNSS data from GPSd daemon service."];
_s['76']=["topic_0000000000000029.html","GpsdClientOptions Class","Options for GpsdClient configuration."];
_s['77']=["topic_0000000000000029_attached_props--.html","GpsdClientOptions Attached Properties",""];
_s['78']=["topic_0000000000000029_events--.html","GpsdClientOptions Events",""];
_s['79']=["topic_0000000000000029_methods--.html","GpsdClientOptions Methods",""];
_s['80']=["topic_0000000000000029_props--.html","GpsdClientOptions Properties",""];
_s['81']=["topic_0000000000000029_vars--.html","GpsdClientOptions Fields",""];
_s['82']=["topic_000000000000002A.html","GpsdClientOptions.ServerAddress Property","Gets and sets gpsd service ip."];
_s['83']=["topic_000000000000002B.html","GpsdClientOptions.ServerPort Property","Gets and sets gpsd port."];
_s['84']=["topic_000000000000002C.html","GpsdClientOptions.KeepAlivePeriod Property","Gets o sets the period in seconds at which gnss reports are expected."];
_s['85']=["topic_000000000000002D.html","GpsdClient Class","Client to get GNSS data from GPSd Client."];
_s['86']=["topic_000000000000002D_attached_props--.html","GpsdClient Attached Properties",""];
_s['87']=["topic_000000000000002D_events--.html","GpsdClient Events",""];
_s['88']=["topic_000000000000002D_methods--.html","GpsdClient Methods",""];
_s['89']=["topic_000000000000002D_props--.html","GpsdClient Properties",""];
_s['90']=["topic_000000000000002D_vars--.html","GpsdClient Fields",""];
_s['91']=["topic_000000000000002E.html","Connected Event","Event triggered when client is connected."];
_s['92']=["topic_000000000000002F.html","Disconnected Event","Event triggered when client is disconnected."];
_s['93']=["topic_0000000000000030.html","Error Event","Event triggered when client detects an error."];
_s['94']=["topic_0000000000000031.html","StatusChanged Event","Event triggered when gps status changes."];
_s['95']=["topic_0000000000000032.html","TpvReportReceived Event","Event triggered when new Time-position-velocity report is received."];
_s['96']=["topic_0000000000000033.html","GpsdClient.TpvReportCurrent Property","Gets current GnssTpvReport."];
_s['97']=["topic_0000000000000034.html","GpsdClient.TpvReportLastFixed Property","Gets last fixed GnssTpvReport."];
_s['98']=["topic_0000000000000035.html","GpsdClient.IsConnected Property","True if client is connected."];
_s['99']=["topic_0000000000000036.html","GpsdClient.Status Property","Gets GnssStatus of client."];
_s['100']=["topic_0000000000000037.html","GpsdClient.ReportsCountBeforeNoFix Property","Gets number of NoFix reports required by client to switch status."];
_s['101']=["topic_0000000000000038.html","GpsdClient(IOptionsMonitor\u0026lt;GpsdClientOptions\u0026gt;) Constructor","Initializes a new instance of the GpsdClient class."];
_s['102']=["topic_0000000000000038_overloads--.html","GpsdClient Constructor","Initializes a new instance of the GpsdClient class."];
_s['103']=["topic_0000000000000039.html","GpsdClient(IOptionsMonitor\u0026lt;GpsdClientOptions\u0026gt;, ILogger\u0026lt;GpsdClient\u0026gt;) Constructor","Initializes a new instance of the GpsdClient class."];
_s['104']=["topic_0000000000000039_overloads--.html","GpsdClient Constructor","Initializes a new instance of the GpsdClient class."];
_s['105']=["topic_000000000000003A.html","GpsdClient(GpsdClientOptions) Constructor","Initializes a new instance of the GpsdClient class."];
_s['106']=["topic_000000000000003A_overloads--.html","GpsdClient Constructor","Initializes a new instance of the GpsdClient class."];
_s['107']=["topic_000000000000003B.html","GpsdClient(GpsdClientOptions, ILogger\u0026lt;GpsdClient\u0026gt;) Constructor","Initializes a new instance of the GpsdClient class."];
_s['108']=["topic_000000000000003B_overloads--.html","GpsdClient Constructor","Initializes a new instance of the GpsdClient class."];
_s['109']=["topic_000000000000003C.html","GpsdClient.StartAsync Method","Starts client."];
_s['110']=["topic_000000000000003D.html","GpsdClient.CloseAsync Method","Closes the client.."];
_s['111']=["topic_000000000000003F.html","Gie.Iot.Hardware.Ports Namespace","Contains classes for serial communications."];
_s['112']=["topic_0000000000000040.html","SerialApiDigi Class","Implements\r\n\r\nDigi Api\r\n\r\ncommunication"];
_s['113']=["topic_0000000000000040_attached_props--.html","SerialApiDigi Attached Properties",""];
_s['114']=["topic_0000000000000040_events--.html","SerialApiDigi Events",""];
_s['115']=["topic_0000000000000040_methods--.html","SerialApiDigi Methods",""];
_s['116']=["topic_0000000000000040_props--.html","SerialApiDigi Properties",""];
_s['117']=["topic_0000000000000040_vars--.html","SerialApiDigi Fields",""];
_s['118']=["topic_0000000000000041.html","SerialApiDigi(ISerialPort, ILogger) Constructor","Initializes a new instance of the SerialApiDigi class."];
_s['119']=["topic_0000000000000041_overloads--.html","SerialApiDigi Constructor","Initializes a new instance of the SerialApiDigi class."];
_s['120']=["topic_0000000000000042.html","SerialApiDigi(ISerialPort) Constructor","Initializes a new instance of the SerialApiDigi class."];
_s['121']=["topic_0000000000000042_overloads--.html","SerialApiDigi Constructor","Initializes a new instance of the SerialApiDigi class."];
_s['122']=["topic_0000000000000043.html","SerialApiDigi.PortOpen Method","Opens underlying serial port."];
_s['123']=["topic_0000000000000044.html","SerialApiDigi.PortClose Method","Closes underlying serial port."];
_s['124']=["topic_0000000000000045.html","SerialApiDigi.SendDataAsync (List\u0026lt;Byte\u0026gt;) Method","Sends a payload in an Api frame."];
_s['125']=["topic_0000000000000045_overloads--.html","SerialApiDigi.SendDataAsync Method","Sends a payload in an Api frame."];
_s['126']=["topic_0000000000000046.html","SerialApiDigi.SendDataAsync (List\u0026lt;Byte\u0026gt;, Int32) Method","Sends a payload in an Api frame with timeout."];
_s['127']=["topic_0000000000000046_overloads--.html","SerialApiDigi.SendDataAsync Method","Sends a payload in an Api frame with timeout."];
_s['128']=["topic_0000000000000047.html","SerialApiDigi.SendDataAsync (List\u0026lt;Byte\u0026gt;, CancellationToken) Method","Sends a payload in an Api frame with cancellation token."];
_s['129']=["topic_0000000000000047_overloads--.html","SerialApiDigi.SendDataAsync Method","Sends a payload in an Api frame with cancellation token."];
_s['130']=["topic_0000000000000048.html","SerialApiDigi.SendDataAsync (List\u0026lt;Byte\u0026gt;, Int32, CancellationToken) Method","Sends a payload in an Api frame with timeout and cancellation token."];
_s['131']=["topic_0000000000000048_overloads--.html","SerialApiDigi.SendDataAsync Method","Sends a payload in an Api frame with timeout and cancellation token."];
_s['132']=["topic_0000000000000049.html","SerialApiDigi.ReceiveDataAsync  Method","Receives the payload of an Api frame."];
_s['133']=["topic_0000000000000049_overloads--.html","SerialApiDigi.ReceiveDataAsync Method","Receives the payload of an Api frame."];
_s['134']=["topic_000000000000004A.html","SerialApiDigi.ReceiveDataAsync (Int32) Method","Receives the payload of an Api frame with timeout."];
_s['135']=["topic_000000000000004A_overloads--.html","SerialApiDigi.ReceiveDataAsync Method","Receives the payload of an Api frame with timeout."];
_s['136']=["topic_000000000000004B.html","SerialApiDigi.ReceiveDataAsync (CancellationToken) Method","Receives the payload of an Api frame with cancellation token."];
_s['137']=["topic_000000000000004B_overloads--.html","SerialApiDigi.ReceiveDataAsync Method","Receives the payload of an Api frame with cancellation token."];
_s['138']=["topic_000000000000004C.html","SerialApiDigi.ReceiveDataAsync (Int32, CancellationToken) Method","Receives the payload of an Api frame with timeout and cancellation token."];
_s['139']=["topic_000000000000004C_overloads--.html","SerialApiDigi.ReceiveDataAsync Method","Receives the payload of an Api frame with timeout and cancellation token."];
_s['140']=["topic_000000000000004D.html","Gie.Iot.Hardware.Ports.Commons Namespace","Contains interfaces, models and other commons for serial communications."];
_s['141']=["topic_000000000000004E.html","BaudRateChangedEventArgs Class","Provides data for the ISerialPort.BaudRateChanged event."];
_s['142']=["topic_000000000000004E_attached_props--.html","BaudRateChangedEventArgs Attached Properties",""];
_s['143']=["topic_000000000000004E_events--.html","BaudRateChangedEventArgs Events",""];
_s['144']=["topic_000000000000004E_methods--.html","BaudRateChangedEventArgs Methods",""];
_s['145']=["topic_000000000000004E_props--.html","BaudRateChangedEventArgs Properties",""];
_s['146']=["topic_000000000000004E_vars--.html","BaudRateChangedEventArgs Fields",""];
_s['147']=["topic_000000000000004F.html","BaudRateChangedEventArgs.BaudRate Property","Gets or sets the serial baud rate."];
_s['148']=["topic_0000000000000050.html","BaudRateChangedEventArgs Constructor",""];
_s['149']=["topic_0000000000000051.html","PortNameChangedEventArgs Class","Provides data for the ISerialPort.PortNameChanged event."];
_s['150']=["topic_0000000000000051_attached_props--.html","PortNameChangedEventArgs Attached Properties",""];
_s['151']=["topic_0000000000000051_events--.html","PortNameChangedEventArgs Events",""];
_s['152']=["topic_0000000000000051_methods--.html","PortNameChangedEventArgs Methods",""];
_s['153']=["topic_0000000000000051_props--.html","PortNameChangedEventArgs Properties",""];
_s['154']=["topic_0000000000000051_vars--.html","PortNameChangedEventArgs Fields",""];
_s['155']=["topic_0000000000000052.html","PortNameChangedEventArgs.PortName Property","Gets or sets the communications port."];
_s['156']=["topic_0000000000000053.html","PortNameChangedEventArgs Constructor",""];
_s['157']=["topic_0000000000000054.html","SerialApiErrorException Class","Exception thrown on error while receiving data."];
_s['158']=["topic_0000000000000054_attached_props--.html","SerialApiErrorException Attached Properties",""];
_s['159']=["topic_0000000000000054_events--.html","SerialApiErrorException Events",""];
_s['160']=["topic_0000000000000054_methods--.html","SerialApiErrorException Methods",""];
_s['161']=["topic_0000000000000054_props--.html","SerialApiErrorException Properties",""];
_s['162']=["topic_0000000000000054_vars--.html","SerialApiErrorException Fields",""];
_s['163']=["topic_0000000000000055.html","SerialApiErrorException Constructor","Creates new instance of SerialApiErrorException class."];
_s['164']=["topic_0000000000000056.html","ISerialApi Interface","Serial api interface."];
_s['165']=["topic_0000000000000056_attached_props--.html","ISerialApi Attached Properties",""];
_s['166']=["topic_0000000000000056_events--.html","ISerialApi Events",""];
_s['167']=["topic_0000000000000056_methods--.html","ISerialApi Methods",""];
_s['168']=["topic_0000000000000056_props--.html","ISerialApi Properties",""];
_s['169']=["topic_0000000000000056_vars--.html","ISerialApi Fields",""];
_s['170']=["topic_0000000000000057.html","ISerialApi.PortOpen Method","Opens underlying serial port."];
_s['171']=["topic_0000000000000058.html","ISerialApi.PortClose Method","Closes underlying serial port."];
_s['172']=["topic_0000000000000059.html","ISerialApi.ReceiveDataAsync  Method","Receives the payload of an Api frame."];
_s['173']=["topic_0000000000000059_overloads--.html","ISerialApi.ReceiveDataAsync Method","Receives the payload of an Api frame."];
_s['174']=["topic_000000000000005A.html","ISerialApi.ReceiveDataAsync (Int32) Method","Receives the payload of an Api frame with timeout."];
_s['175']=["topic_000000000000005A_overloads--.html","ISerialApi.ReceiveDataAsync Method","Receives the payload of an Api frame with timeout."];
_s['176']=["topic_000000000000005B.html","ISerialApi.ReceiveDataAsync (CancellationToken) Method","Receives the payload of an Api frame with cancellation token."];
_s['177']=["topic_000000000000005B_overloads--.html","ISerialApi.ReceiveDataAsync Method","Receives the payload of an Api frame with cancellation token."];
_s['178']=["topic_000000000000005C.html","ISerialApi.ReceiveDataAsync (Int32, CancellationToken) Method","Receives the payload of an Api frame with timeout and cancellation token."];
_s['179']=["topic_000000000000005C_overloads--.html","ISerialApi.ReceiveDataAsync Method","Receives the payload of an Api frame with timeout and cancellation token."];
_s['180']=["topic_000000000000005D.html","ISerialApi.SendDataAsync (List\u0026lt;Byte\u0026gt;) Method","Sends a payload in an Api frame."];
_s['181']=["topic_000000000000005D_overloads--.html","ISerialApi.SendDataAsync Method","Sends a payload in an Api frame."];
_s['182']=["topic_000000000000005E.html","ISerialApi.SendDataAsync (List\u0026lt;Byte\u0026gt;, Int32) Method","Sends a payload in an Api frame with timeout."];
_s['183']=["topic_000000000000005E_overloads--.html","ISerialApi.SendDataAsync Method","Sends a payload in an Api frame with timeout."];
_s['184']=["topic_000000000000005F.html","ISerialApi.SendDataAsync (List\u0026lt;Byte\u0026gt;, CancellationToken) Method","Sends a payload in an Api frame with cancellation token."];
_s['185']=["topic_000000000000005F_overloads--.html","ISerialApi.SendDataAsync Method","Sends a payload in an Api frame with cancellation token."];
_s['186']=["topic_0000000000000060.html","ISerialApi.SendDataAsync (List\u0026lt;Byte\u0026gt;, Int32, CancellationToken) Method","Sends a payload in an Api frame with timeout and cancellation token."];
_s['187']=["topic_0000000000000060_overloads--.html","ISerialApi.SendDataAsync Method","Sends a payload in an Api frame with timeout and cancellation token."];
_s['188']=["topic_0000000000000061.html","ISerialPort Interface","Serial port resource interface."];
_s['189']=["topic_0000000000000061_attached_props--.html","ISerialPort Attached Properties",""];
_s['190']=["topic_0000000000000061_events--.html","ISerialPort Events",""];
_s['191']=["topic_0000000000000061_methods--.html","ISerialPort Methods",""];
_s['192']=["topic_0000000000000061_props--.html","ISerialPort Properties",""];
_s['193']=["topic_0000000000000061_vars--.html","ISerialPort Fields",""];
_s['194']=["topic_0000000000000062.html","ISerialPort.PortName Property","Gets or sets the port for communications."];
_s['195']=["topic_0000000000000063.html","ISerialPort.BaudRate Property","Gets or sets the serial baud rate."];
_s['196']=["topic_0000000000000064.html","ISerialPort.IsOpen Property","True if underlying serial port is open."];
_s['197']=["topic_0000000000000065.html","PortNameChanged Event","Raised when PortName changes."];
_s['198']=["topic_0000000000000066.html","BaudRateChanged Event","Raised when BaudRate changes."];
_s['199']=["topic_0000000000000067.html","ISerialPort.Open Method","Opens the serial port."];
_s['200']=["topic_0000000000000068.html","ISerialPort.Close Method","Closes serial port."];
_s['201']=["topic_0000000000000069.html","ISerialPort.ReadBytesAsync (Int32) Method","Reads a specified number of bytes from the input buffer."];
_s['202']=["topic_0000000000000069_overloads--.html","ISerialPort.ReadBytesAsync Method","Reads a specified number of bytes from the input buffer."];
_s['203']=["topic_000000000000006A.html","ISerialPort.ReadBytesAsync (Int32, Int32) Method","Reads a specified number of bytes from the input buffer with timeout."];
_s['204']=["topic_000000000000006A_overloads--.html","ISerialPort.ReadBytesAsync Method","Reads a specified number of bytes from the input buffer with timeout."];
_s['205']=["topic_000000000000006B.html","ISerialPort.ReadBytesAsync (Int32, CancellationToken) Method","Reads a specified number of bytes from the input buffer with cancellation token."];
_s['206']=["topic_000000000000006B_overloads--.html","ISerialPort.ReadBytesAsync Method","Reads a specified number of bytes from the input buffer with cancellation token."];
_s['207']=["topic_000000000000006C.html","ISerialPort.ReadBytesAsync (Int32, Int32, CancellationToken) Method","Reads a specified number of bytes from the input buffer with timeout and cancellation token."];
_s['208']=["topic_000000000000006C_overloads--.html","ISerialPort.ReadBytesAsync Method","Reads a specified number of bytes from the input buffer with timeout and cancellation token."];
_s['209']=["topic_000000000000006D.html","ISerialPort.ReadLineAsync  Method","Reads up to the NewLine value in the input buffer."];
_s['210']=["topic_000000000000006D_overloads--.html","ISerialPort.ReadLineAsync Method","Reads up to the NewLine value in the input buffer."];
_s['211']=["topic_000000000000006E.html","ISerialPort.ReadLineAsync (Int32) Method","Reads up to the NewLine value in the input buffer with timeout."];
_s['212']=["topic_000000000000006E_overloads--.html","ISerialPort.ReadLineAsync Method","Reads up to the NewLine value in the input buffer with timeout."];
_s['213']=["topic_000000000000006F.html","ISerialPort.ReadLineAsync (CancellationToken) Method","Reads up to the NewLine value in the input buffer with cancellation token."];
_s['214']=["topic_000000000000006F_overloads--.html","ISerialPort.ReadLineAsync Method","Reads up to the NewLine value in the input buffer with cancellation token."];
_s['215']=["topic_0000000000000070.html","ISerialPort.ReadLineAsync (Int32, CancellationToken) Method","Reads up to the NewLine value in the input buffer with timeout and cancellation token."];
_s['216']=["topic_0000000000000070_overloads--.html","ISerialPort.ReadLineAsync Method","Reads up to the NewLine value in the input buffer with timeout and cancellation token."];
_s['217']=["topic_0000000000000071.html","ISerialPort.WriteBytesAsync (List\u0026lt;Byte\u0026gt;) Method","Writes the specified byte list to the output buffer."];
_s['218']=["topic_0000000000000071_overloads--.html","ISerialPort.WriteBytesAsync Method","Writes the specified byte list to the output buffer."];
_s['219']=["topic_0000000000000072.html","ISerialPort.WriteBytesAsync (List\u0026lt;Byte\u0026gt;, Int32) Method","Writes the specified byte list to the output buffer with timeout."];
_s['220']=["topic_0000000000000072_overloads--.html","ISerialPort.WriteBytesAsync Method","Writes the specified byte list to the output buffer with timeout."];
_s['221']=["topic_0000000000000073.html","ISerialPort.WriteBytesAsync (List\u0026lt;Byte\u0026gt;, CancellationToken) Method","Writes the specified byte list to the output buffer with cancellation token."];
_s['222']=["topic_0000000000000073_overloads--.html","ISerialPort.WriteBytesAsync Method","Writes the specified byte list to the output buffer with cancellation token."];
_s['223']=["topic_0000000000000074.html","ISerialPort.WriteBytesAsync (List\u0026lt;Byte\u0026gt;, Int32, CancellationToken) Method","Writes the specified byte list to the output buffer with timeout and cancellation token."];
_s['224']=["topic_0000000000000074_overloads--.html","ISerialPort.WriteBytesAsync Method","Writes the specified byte list to the output buffer with timeout and cancellation token."];
_s['225']=["topic_0000000000000075.html","ISerialPort.WriteLineAsync (String) Method","Writes the specified string and the NewLine value to the output buffer."];
_s['226']=["topic_0000000000000075_overloads--.html","ISerialPort.WriteLineAsync Method","Writes the specified string and the NewLine value to the output buffer."];
_s['227']=["topic_0000000000000076.html","ISerialPort.WriteLineAsync (String, Int32) Method","Writes the specified string and the NewLine value to the output buffer with timeout."];
_s['228']=["topic_0000000000000076_overloads--.html","ISerialPort.WriteLineAsync Method","Writes the specified string and the NewLine value to the output buffer with timeout."];
_s['229']=["topic_0000000000000077.html","ISerialPort.WriteLineAsync (String, CancellationToken) Method","Writes the specified string and the NewLine value to the output buffer with cancellation token."];
_s['230']=["topic_0000000000000077_overloads--.html","ISerialPort.WriteLineAsync Method","Writes the specified string and the NewLine value to the output buffer with cancellation token."];
_s['231']=["topic_0000000000000078.html","ISerialPort.WriteLineAsync (String, Int32, CancellationToken) Method","Writes the specified string and the NewLine value to the output buffer with timeout and cancellation token."];
_s['232']=["topic_0000000000000078_overloads--.html","ISerialPort.WriteLineAsync Method","Writes the specified string and the NewLine value to the output buffer with timeout and cancellation token."];
_s['233']=["topic_0000000000000079.html","SerialPort Class","Represents a serial port resource."];
_s['234']=["topic_0000000000000079_attached_props--.html","SerialPort Attached Properties",""];
_s['235']=["topic_0000000000000079_events--.html","SerialPort Events",""];
_s['236']=["topic_0000000000000079_methods--.html","SerialPort Methods",""];
_s['237']=["topic_0000000000000079_props--.html","SerialPort Properties",""];
_s['238']=["topic_0000000000000079_vars--.html","SerialPort Fields",""];
_s['239']=["topic_000000000000007A.html","SerialPort.PortName Property","Gets or sets the port for communications."];
_s['240']=["topic_000000000000007B.html","SerialPort.BaudRate Property","Gets or sets the serial baud rate."];
_s['241']=["topic_000000000000007C.html","SerialPort.IsOpen Property","True if underlying serial port is open."];
_s['242']=["topic_000000000000007D.html","PortNameChanged Event","Raised when PortName changes."];
_s['243']=["topic_000000000000007E.html","BaudRateChanged Event","Raised when BaudRate changes."];
_s['244']=["topic_000000000000007F.html","SerialPort(IOptionsMonitor\u0026lt;SerialPortOptions\u0026gt;, ILogger\u0026lt;SerialPort\u0026gt;) Constructor","Initializes a new instance of the SerialPort class."];
_s['245']=["topic_000000000000007F_overloads--.html","SerialPort Constructor","Initializes a new instance of the SerialPort class."];
_s['246']=["topic_0000000000000080.html","SerialPort(IOptionsMonitor\u0026lt;SerialPortOptions\u0026gt;) Constructor","Initializes a new instance of the SerialPort class."];
_s['247']=["topic_0000000000000080_overloads--.html","SerialPort Constructor","Initializes a new instance of the SerialPort class."];
_s['248']=["topic_0000000000000081.html","SerialPort(SerialPortOptions, ILogger\u0026lt;SerialPort\u0026gt;) Constructor","Initializes a new instance of the SerialPort class."];
_s['249']=["topic_0000000000000081_overloads--.html","SerialPort Constructor","Initializes a new instance of the SerialPort class."];
_s['250']=["topic_0000000000000082.html","SerialPort(SerialPortOptions) Constructor","Initializes a new instance of the SerialPort class."];
_s['251']=["topic_0000000000000082_overloads--.html","SerialPort Constructor","Initializes a new instance of the SerialPort class."];
_s['252']=["topic_0000000000000083.html","SerialPort.Open Method","Opens the serial port."];
_s['253']=["topic_0000000000000084.html","SerialPort.Close Method","Closes serial port."];
_s['254']=["topic_0000000000000085.html","SerialPort.WriteBytesAsync (List\u0026lt;Byte\u0026gt;) Method","Writes the specified byte list to the output buffer."];
_s['255']=["topic_0000000000000085_overloads--.html","SerialPort.WriteBytesAsync Method","Writes the specified byte list to the output buffer."];
_s['256']=["topic_0000000000000086.html","SerialPort.WriteBytesAsync (List\u0026lt;Byte\u0026gt;, Int32) Method","Writes the specified byte list to the output buffer with timeout."];
_s['257']=["topic_0000000000000086_overloads--.html","SerialPort.WriteBytesAsync Method","Writes the specified byte list to the output buffer with timeout."];
_s['258']=["topic_0000000000000087.html","SerialPort.WriteBytesAsync (List\u0026lt;Byte\u0026gt;, CancellationToken) Method","Writes the specified byte list to the output buffer with cancellation token."];
_s['259']=["topic_0000000000000087_overloads--.html","SerialPort.WriteBytesAsync Method","Writes the specified byte list to the output buffer with cancellation token."];
_s['260']=["topic_0000000000000088.html","SerialPort.WriteBytesAsync (List\u0026lt;Byte\u0026gt;, Int32, CancellationToken) Method","Writes the specified byte list to the output buffer with timeout and cancellation token."];
_s['261']=["topic_0000000000000088_overloads--.html","SerialPort.WriteBytesAsync Method","Writes the specified byte list to the output buffer with timeout and cancellation token."];
_s['262']=["topic_0000000000000089.html","SerialPort.ReadBytesAsync (Int32) Method","Reads a specified number of bytes from the input buffer."];
_s['263']=["topic_0000000000000089_overloads--.html","SerialPort.ReadBytesAsync Method","Reads a specified number of bytes from the input buffer."];
_s['264']=["topic_000000000000008A.html","SerialPort.ReadBytesAsync (Int32, Int32) Method","Reads a specified number of bytes from the input buffer with timeout."];
_s['265']=["topic_000000000000008A_overloads--.html","SerialPort.ReadBytesAsync Method","Reads a specified number of bytes from the input buffer with timeout."];
_s['266']=["topic_000000000000008B.html","SerialPort.ReadBytesAsync (Int32, CancellationToken) Method","Reads a specified number of bytes from the input buffer with cancellation token."];
_s['267']=["topic_000000000000008B_overloads--.html","SerialPort.ReadBytesAsync Method","Reads a specified number of bytes from the input buffer with cancellation token."];
_s['268']=["topic_000000000000008C.html","SerialPort.ReadBytesAsync (Int32, Int32, CancellationToken) Method","Reads a specified number of bytes from the input buffer with timeout and cancellation token."];
_s['269']=["topic_000000000000008C_overloads--.html","SerialPort.ReadBytesAsync Method","Reads a specified number of bytes from the input buffer with timeout and cancellation token."];
_s['270']=["topic_000000000000008D.html","SerialPort.ReadLineAsync  Method","Reads up to the NewLine value in the input buffer."];
_s['271']=["topic_000000000000008D_overloads--.html","SerialPort.ReadLineAsync Method","Reads up to the NewLine value in the input buffer."];
_s['272']=["topic_000000000000008E.html","SerialPort.ReadLineAsync (Int32) Method","Reads up to the NewLine value in the input buffer with timeout."];
_s['273']=["topic_000000000000008E_overloads--.html","SerialPort.ReadLineAsync Method","Reads up to the NewLine value in the input buffer with timeout."];
_s['274']=["topic_000000000000008F.html","SerialPort.ReadLineAsync (CancellationToken) Method","Reads up to the NewLine value in the input buffer with cancellation token."];
_s['275']=["topic_000000000000008F_overloads--.html","SerialPort.ReadLineAsync Method","Reads up to the NewLine value in the input buffer with cancellation token."];
_s['276']=["topic_0000000000000090.html","SerialPort.ReadLineAsync (Int32, CancellationToken) Method","Reads up to the NewLine value in the input buffer with timeout and cancellation token."];
_s['277']=["topic_0000000000000090_overloads--.html","SerialPort.ReadLineAsync Method","Reads up to the NewLine value in the input buffer with timeout and cancellation token."];
_s['278']=["topic_0000000000000091.html","SerialPort.WriteLineAsync (String) Method","Writes the specified string and the NewLine value to the output buffer."];
_s['279']=["topic_0000000000000091_overloads--.html","SerialPort.WriteLineAsync Method","Writes the specified string and the NewLine value to the output buffer."];
_s['280']=["topic_0000000000000092.html","SerialPort.WriteLineAsync (String, Int32) Method","Writes the specified string and the NewLine value to the output buffer with timeout."];
_s['281']=["topic_0000000000000092_overloads--.html","SerialPort.WriteLineAsync Method","Writes the specified string and the NewLine value to the output buffer with timeout."];
_s['282']=["topic_0000000000000093.html","SerialPort.WriteLineAsync (String, CancellationToken) Method","Writes the specified string and the NewLine value to the output buffer with cancellation token."];
_s['283']=["topic_0000000000000093_overloads--.html","SerialPort.WriteLineAsync Method","Writes the specified string and the NewLine value to the output buffer with cancellation token."];
_s['284']=["topic_0000000000000094.html","SerialPort.WriteLineAsync (String, Int32, CancellationToken) Method","Writes the specified string and the NewLine value to the output buffer with timeout and cancellation token."];
_s['285']=["topic_0000000000000094_overloads--.html","SerialPort.WriteLineAsync Method","Writes the specified string and the NewLine value to the output buffer with timeout and cancellation token."];
_s['286']=["topic_0000000000000095.html","SerialPort.Dispose Method","Releases the unmanaged resources used by the underlying serial port."];
_s['287']=["topic_0000000000000096.html","SerialPortMock Class","Mocks a serial port resource."];
_s['288']=["topic_0000000000000096_attached_props--.html","SerialPortMock Attached Properties",""];
_s['289']=["topic_0000000000000096_events--.html","SerialPortMock Events",""];
_s['290']=["topic_0000000000000096_methods--.html","SerialPortMock Methods",""];
_s['291']=["topic_0000000000000096_props--.html","SerialPortMock Properties",""];
_s['292']=["topic_0000000000000096_vars--.html","SerialPortMock Fields",""];
_s['293']=["topic_0000000000000097.html","WriteByteBufferChanged Event","Raised when WriteByteBuffer is changed."];
_s['294']=["topic_0000000000000098.html","WriteTextBufferChanged Event","Raised when WriteTextBuffer is changed."];
_s['295']=["topic_0000000000000099.html","PortNameChanged Event","Raised when PortName changes."];
_s['296']=["topic_000000000000009A.html","BaudRateChanged Event","Raised when BaudRate changes."];
_s['297']=["topic_000000000000009B.html","SerialPortMock.ReadByteBuffer Property","Simulated port read byte buffer."];
_s['298']=["topic_000000000000009C.html","SerialPortMock.WriteByteBuffer Property","Simulated port write byte buffer."];
_s['299']=["topic_000000000000009D.html","SerialPortMock.ReadTextBuffer Property","Simulated port read text buffer."];
_s['300']=["topic_000000000000009E.html","SerialPortMock.WriteTextBuffer Property","Simulated port write text buffer."];
_s['301']=["topic_000000000000009F.html","SerialPortMock.EchoEnabled Property","Enables echo. Contents written to write buffers are copied to corresponding read buffers."];
_s['302']=["topic_00000000000000A0.html","SerialPortMock.PortName Property","Gets or sets the port for communications."];
_s['303']=["topic_00000000000000A1.html","SerialPortMock.BaudRate Property","Gets or sets the serial baud rate."];
_s['304']=["topic_00000000000000A2.html","SerialPortMock.IsOpen Property","True if underlying serial port is open."];
_s['305']=["topic_00000000000000A3.html","SerialPortMock(IOptionsMonitor\u0026lt;SerialPortOptions\u0026gt;, ILogger\u0026lt;SerialPort\u0026gt;) Constructor","Initializes a new instance of the SerialPortMock class."];
_s['306']=["topic_00000000000000A3_overloads--.html","SerialPortMock Constructor","Initializes a new instance of the SerialPortMock class."];
_s['307']=["topic_00000000000000A4.html","SerialPortMock(IOptionsMonitor\u0026lt;SerialPortOptions\u0026gt;) Constructor","Initializes a new instance of the SerialPortMock class."];
_s['308']=["topic_00000000000000A4_overloads--.html","SerialPortMock Constructor","Initializes a new instance of the SerialPortMock class."];
_s['309']=["topic_00000000000000A5.html","SerialPortMock(SerialPortOptions, ILogger\u0026lt;SerialPort\u0026gt;) Constructor","Initializes a new instance of the SerialPortMock class."];
_s['310']=["topic_00000000000000A5_overloads--.html","SerialPortMock Constructor","Initializes a new instance of the SerialPortMock class."];
_s['311']=["topic_00000000000000A6.html","SerialPortMock(SerialPortOptions) Constructor","Initializes a new instance of the SerialPortMock class."];
_s['312']=["topic_00000000000000A6_overloads--.html","SerialPortMock Constructor","Initializes a new instance of the SerialPortMock class."];
_s['313']=["topic_00000000000000A7.html","SerialPortMock.Open Method","Opens the serial port."];
_s['314']=["topic_00000000000000A8.html","SerialPortMock.Close Method","Closes serial port."];
_s['315']=["topic_00000000000000A9.html","SerialPortMock.ReadBytesAsync (Int32) Method","Reads a specified number of bytes from the input buffer."];
_s['316']=["topic_00000000000000A9_overloads--.html","SerialPortMock.ReadBytesAsync Method","Reads a specified number of bytes from the input buffer."];
_s['317']=["topic_00000000000000AA.html","SerialPortMock.ReadBytesAsync (Int32, Int32) Method","Reads a specified number of bytes from the input buffer with timeout."];
_s['318']=["topic_00000000000000AA_overloads--.html","SerialPortMock.ReadBytesAsync Method","Reads a specified number of bytes from the input buffer with timeout."];
_s['319']=["topic_00000000000000AB.html","SerialPortMock.ReadBytesAsync (Int32, CancellationToken) Method","Reads a specified number of bytes from the input buffer with cancellation token."];
_s['320']=["topic_00000000000000AB_overloads--.html","SerialPortMock.ReadBytesAsync Method","Reads a specified number of bytes from the input buffer with cancellation token."];
_s['321']=["topic_00000000000000AC.html","SerialPortMock.ReadBytesAsync (Int32, Int32, CancellationToken) Method","Reads a specified number of bytes from the input buffer with timeout and cancellation token."];
_s['322']=["topic_00000000000000AC_overloads--.html","SerialPortMock.ReadBytesAsync Method","Reads a specified number of bytes from the input buffer with timeout and cancellation token."];
_s['323']=["topic_00000000000000AD.html","SerialPortMock.ReadLineAsync  Method","Reads up to the NewLine value in the input buffer."];
_s['324']=["topic_00000000000000AD_overloads--.html","SerialPortMock.ReadLineAsync Method","Reads up to the NewLine value in the input buffer."];
_s['325']=["topic_00000000000000AE.html","SerialPortMock.ReadLineAsync (Int32) Method","Reads up to the NewLine value in the input buffer with timeout."];
_s['326']=["topic_00000000000000AE_overloads--.html","SerialPortMock.ReadLineAsync Method","Reads up to the NewLine value in the input buffer with timeout."];
_s['327']=["topic_00000000000000AF.html","SerialPortMock.ReadLineAsync (CancellationToken) Method","Reads up to the NewLine value in the input buffer with cancellation token."];
_s['328']=["topic_00000000000000AF_overloads--.html","SerialPortMock.ReadLineAsync Method","Reads up to the NewLine value in the input buffer with cancellation token."];
_s['329']=["topic_00000000000000B0.html","SerialPortMock.ReadLineAsync (Int32, CancellationToken) Method","Reads up to the NewLine value in the input buffer with timeout and cancellation token."];
_s['330']=["topic_00000000000000B0_overloads--.html","SerialPortMock.ReadLineAsync Method","Reads up to the NewLine value in the input buffer with timeout and cancellation token."];
_s['331']=["topic_00000000000000B1.html","SerialPortMock.WriteBytesAsync (List\u0026lt;Byte\u0026gt;) Method","Writes the specified byte list to the output buffer."];
_s['332']=["topic_00000000000000B1_overloads--.html","SerialPortMock.WriteBytesAsync Method","Writes the specified byte list to the output buffer."];
_s['333']=["topic_00000000000000B2.html","SerialPortMock.WriteBytesAsync (List\u0026lt;Byte\u0026gt;, Int32) Method","Writes the specified byte list to the output buffer with timeout."];
_s['334']=["topic_00000000000000B2_overloads--.html","SerialPortMock.WriteBytesAsync Method","Writes the specified byte list to the output buffer with timeout."];
_s['335']=["topic_00000000000000B3.html","SerialPortMock.WriteBytesAsync (List\u0026lt;Byte\u0026gt;, CancellationToken) Method","Writes the specified byte list to the output buffer with cancellation token."];
_s['336']=["topic_00000000000000B3_overloads--.html","SerialPortMock.WriteBytesAsync Method","Writes the specified byte list to the output buffer with cancellation token."];
_s['337']=["topic_00000000000000B4.html","SerialPortMock.WriteBytesAsync (List\u0026lt;Byte\u0026gt;, Int32, CancellationToken) Method","Writes the specified byte list to the output buffer with timeout and cancellation token."];
_s['338']=["topic_00000000000000B4_overloads--.html","SerialPortMock.WriteBytesAsync Method","Writes the specified byte list to the output buffer with timeout and cancellation token."];
_s['339']=["topic_00000000000000B5.html","SerialPortMock.WriteLineAsync (String) Method","Writes the specified string and the NewLine value to the output buffer."];
_s['340']=["topic_00000000000000B5_overloads--.html","SerialPortMock.WriteLineAsync Method","Writes the specified string and the NewLine value to the output buffer."];
_s['341']=["topic_00000000000000B6.html","SerialPortMock.WriteLineAsync (String, Int32) Method","Writes the specified string and the NewLine value to the output buffer with timeout."];
_s['342']=["topic_00000000000000B6_overloads--.html","SerialPortMock.WriteLineAsync Method","Writes the specified string and the NewLine value to the output buffer with timeout."];
_s['343']=["topic_00000000000000B7.html","SerialPortMock.WriteLineAsync (String, CancellationToken) Method","Writes the specified string and the NewLine value to the output buffer with cancellation token."];
_s['344']=["topic_00000000000000B7_overloads--.html","SerialPortMock.WriteLineAsync Method","Writes the specified string and the NewLine value to the output buffer with cancellation token."];
_s['345']=["topic_00000000000000B8.html","SerialPortMock.WriteLineAsync (String, Int32, CancellationToken) Method","Writes the specified string and the NewLine value to the output buffer with timeout and cancellation token."];
_s['346']=["topic_00000000000000B8_overloads--.html","SerialPortMock.WriteLineAsync Method","Writes the specified string and the NewLine value to the output buffer with timeout and cancellation token."];
_s['347']=["topic_00000000000000B9.html","SerialPortOptions Class","Options for SerialPort configuration."];
_s['348']=["topic_00000000000000B9_attached_props--.html","SerialPortOptions Attached Properties",""];
_s['349']=["topic_00000000000000B9_events--.html","SerialPortOptions Events",""];
_s['350']=["topic_00000000000000B9_methods--.html","SerialPortOptions Methods",""];
_s['351']=["topic_00000000000000B9_props--.html","SerialPortOptions Properties",""];
_s['352']=["topic_00000000000000B9_vars--.html","SerialPortOptions Fields",""];
_s['353']=["topic_00000000000000BA.html","SerialPortOptions.Name Property","Gets or sets the port for communications."];
_s['354']=["topic_00000000000000BB.html","SerialPortOptions.BaudRate Property","Gets or sets the serial baud rate. Defaults to 115200."];
_s['355']=["topic_00000000000000BC.html","Gie Iot Libraries ",""];
_s['356']=["topic_00000000000000BD.html","New Topic ",""];
